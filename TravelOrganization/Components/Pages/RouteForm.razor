<style>
.station-list {
    border: 1px solid grey;
    height: 200px;
    width: 100%;
    overflow: hidden;
    overflow-y: scroll;
}
</style>

<script>
var dragged;
var selectedStation;

function deleteStation() {
    if (!selectedStation)
        return;

    document.getElementById('new-station').classList.add('d-none');
    document.getElementById('avail-stations').removeChild(selectedStation);
    selectedStation = null;
    onUnselectStation();
}

function onSelectStation() {
    document.getElementById('edit-station').classList.remove('disabled');
    document.getElementById('delete-station').classList.remove('disabled');
}

function onUnselectStation() {
    document.getElementById('edit-station').classList.add('disabled');
    document.getElementById('delete-station').classList.add('disabled');
}

document.addEventListener('mousedown', (event) => {
    const target = event.target;

    if (target.localName == 'li' && target.parentNode.id == 'avail-stations') {
        if (selectedStation) {
            selectedStation.classList.remove('active');
        }

        console.log(target);

        selectedStation = target;
        selectedStation.classList.add('active');

        onSelectStation();
    }
});

document.addEventListener('dragstart', ({target}) => {
    dragged = target;
});

document.addEventListener("dragover", (event) => {
    event.preventDefault();
});

document.addEventListener("drop", ({target}) => {
    if (selectedStation) {
        selectedStation.classList.remove('active');
        selectedStation = null;

        onUnselectStation();
    }

    if (target.localName == "li") {
        if (target.parentElement != dragged.parentElement) {
            target.parentElement.appendChild(dragged);
        }
        else {
            target.after(dragged);
        }
    }

    if (target.localName == "ul" && target != dragged.parentElement) {
        target.appendChild(dragged);
    }
});
</script>

<form>
    <div class="row">
        <div class="col-md-6">
            <label for="name" class="form-label">Pavadinimas</label>
            <input type="text" class="form-control" id="name" value="@Name">
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <h3>Maršruto stotelės</h3>
            <nav>
                <ul class="list-group station-list" id="stations">
                </ul>
            </nav>
        </div>
        <div class="col-md-3">
            <h3>Stotelės</h3>
            <nav>
                <ul class="list-group station-list" id="avail-stations">
                    <li id="0" draggable="true" class="list-group-item">Vilnius</li>
                    <li id="1" draggable="true" class="list-group-item">Paneriai</li>
                    <li id="2" draggable="true" class="list-group-item">Lentvaris</li>
                    <li id="3" draggable="true" class="list-group-item">Kariotiškės</li>
                    <li id="4" draggable="true" class="list-group-item">Rykantai</li>
                    <li id="5" draggable="true" class="list-group-item">Lazdėnai</li> 
                    <li id="6" draggable="true" class="list-group-item">Baltamiškis</li> 
                    <li id="7" draggable="true" class="list-group-item">Vievis</li>
                    <li id="8" draggable="true" class="list-group-item">Kaugonys</li>
                    <li id="9" draggable="true" class="list-group-item">Žasliai</li>
                    <li id="10" draggable="true" class="list-group-item">Kaišiadorys</li>
                    <li id="11" draggable="true" class="list-group-item">Pamieris</li>
                    <li id="12" draggable="true" class="list-group-item">Pravieniškės</li>
                    <li id="13" draggable="true" class="list-group-item">Karčiupis</li>
                    <li id="14" draggable="true" class="list-group-item">Palemonas</li>
                    <li id="15" draggable="true" class="list-group-item">Kaunas</li>
                </ul>
            </nav>
        </div>

        <div class="col-md-6 @NewStationShowClass" id="new-station">
            <h3 id="station-form-title">@StationFormTitle</h3>
            <form>
                <label for="name" class="form-label">Pavadinimas</label>
                <input type="text" class="form-control" id="station-name" name="name" value="@StationName" required>

                <div class="row">
                    <div class="col-md-6">
                        <label for="name" class="form-label">Platuma</label>
                        <input type="number" step="0.0000001" class="form-control" id="station-latitude" name="latitude" value="@StationLat" required>
                    </div>
                    <div class="col-md-6">
                        <label for="name" class="form-label">Lyguma</label>
                        <input type="number" step="0.0000001" class="form-control" id="station-longitude" name="longitude" value="@StationLon" required>
                    </div>
                </div>

                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">@ButtonText</button>
                </div>
            </form>
        </div>
    </div>

    <div class="mt-2">
        <div class="row">
            <div class="col-md-3">
                <a class="btn btn-primary" href="/routes" role="button">@ButtonText</a>
            </div>

            <div class="col-md-3">
                <a class="btn btn-primary" @onclick="AddStation" role="button" id="add-station">Pridėti</a>
                <a class="btn btn-success disabled" @onclick="EditStation" role="button" id="edit-station">Redaguoti</a>
                <a class="btn btn-danger disabled" onclick="deleteStation();" role="button" id="delete-station">Ištrinti</a>
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public string Type { get; set; } = null!;
    [Parameter]
    public string Name { get; set; } = null!;

    public string ButtonText
    {
        get
        {
            return Type == "Edit" ? "Išsaugoti" : "Sukurti";
        }
    }

    public string NewStationShowClass
    {
        get
        {
            return ShowNewStationForm ? "" : "d-none";
        }
    }

    public string StationFormTitle { get; set; } = null!;
    public string StationName { get; set; } = null!;
    public string StationLat { get; set; } = null!;
    public string StationLon { get; set; } = null!;

    private bool ShowNewStationForm = false;


    private void AddStation()
    {
        ShowNewStationForm = true;
        StationFormTitle = "Naujos stotelės pridėjimas";
        StationName = "";
        StationLat = "";
        StationLon = "";
    }

    private void EditStation()
    {
        ShowNewStationForm = true;
        StationFormTitle = "Stotelės redagavimas";
        StationName = "Kaunas";
        StationLat = "54.9016786";
        StationLon = "23.9865206";
    }
}
