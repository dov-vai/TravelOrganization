@page "/register"
@using System.Net.Http.Json
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json            
@using System.Text               
@inject NavigationManager Navigation
@inject IHttpClientFactory HttpClientFactory
@rendermode InteractiveServer 

<h3>Register</h3>

<EditForm Model="registerModel" OnValidSubmit="HandleRegister" FormName="registerForm" @onsubmit:preventDefault>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" class="form-control" @bind-Value="registerModel.Name" />
    </div>
    <div class="form-group">
        <label for="surname">Surname:</label>
        <InputText id="surname" class="form-control" @bind-Value="registerModel.Surname" />
    </div>
    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="registerModel.Email" type="email" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="registerModel.Password" type="password" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3" role="alert">
        @errorMessage
    </div>
}

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string errorMessage;

   private async Task HandleRegister()
{
    try
    {
        var client = HttpClientFactory.CreateClient();
        client.BaseAddress = new Uri("http://localhost:5257/");
        var response = await client.PostAsJsonAsync("api/User/register", registerModel);
        var responseContent = await response.Content.ReadAsStringAsync();

            if (!response.IsSuccessStatusCode)
            {
                errorMessage = $"Error: {responseContent}";
            }
            else
            {
                try
                {
                    var result = JsonSerializer.Deserialize<Dictionary<string, string>>(responseContent);
                    errorMessage = result["message"];
                }
                catch (Exception ex)
                {
                    errorMessage = $"Unexpected error during deserialization: {ex.Message}, Response: {responseContent}";
                }
            }
    }
    catch (Exception ex)
    {
        errorMessage = $"Unexpected error: {ex.Message}";
    }
}


    public class RegisterModel
    {
        [Required(ErrorMessage = "Name is required.")]
        public string Name { get; set; }

        [Required(ErrorMessage = "Surname is required.")]
        public string Surname { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email format.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [StringLength(100, MinimumLength = 6, ErrorMessage = "Password must be at least 6 characters long.")]
        public string Password { get; set; }
    }

    public class ErrorResponse
    {
        public string Message { get; set; }
    }
}
