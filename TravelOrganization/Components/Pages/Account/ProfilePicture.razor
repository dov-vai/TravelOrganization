@page "/profilePicture"
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager Navigation
@inject IHttpClientFactory HttpClientFactory

<h3>Upload Profile Picture</h3>

<button @onclick="GoToProfilePage" style="position: absolute; top: 90px; right: 70px;">X</button>

@if (!string.IsNullOrEmpty(previewImageUrl))
{
    <div>
        <img src="@previewImageUrl" alt="Profile Picture Preview" width="150" height="150" style="border-radius: 50%;" />
    </div>
}
else
{
    <div>
        <p>No profile picture selected.</p>
    </div>
}

<InputFile OnChange="OnFileSelected" />

<button @onclick="OnSubmit">Upload</button>

@code {
    private string previewImageUrl = "https://static.vecteezy.com/system/resources/thumbnails/009/292/244/small/default-avatar-icon-of-social-media-user-vector.jpg";
    private IBrowserFile selectedFile;

    private void GoToProfilePage()
    {
        Navigation.NavigateTo("/profile");
    }

    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        if (selectedFile != null)
        {
            // Pritaikykite paveikslėlio dydį, jei reikia
            var resizedImage = await selectedFile.RequestImageFileAsync(selectedFile.ContentType, 150, 150);

            using var stream = resizedImage.OpenReadStream(maxAllowedSize: 15 * 1024 * 1024); // Pakeiskite dydį pagal poreikį
            var buffer = new byte[resizedImage.Size];
            await stream.ReadAsync(buffer);
            previewImageUrl = $"data:{resizedImage.ContentType};base64,{Convert.ToBase64String(buffer)}";

            StateHasChanged();
        }
    }

    private async Task OnSubmit()
    {
        if (selectedFile != null)
        {
            var client = HttpClientFactory.CreateClient();
            using var content = new MultipartFormDataContent();
            using var ms = new MemoryStream();
            await selectedFile.OpenReadStream().CopyToAsync(ms);
            var fileContent = new ByteArrayContent(ms.ToArray());
            fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(selectedFile.ContentType);
            content.Add(fileContent, "file", selectedFile.Name);

            var response = await client.PostAsync("api/User/uploadProfilePicture", content);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/profile");
            }
            else
            {
                // Rodykite klaidos pranešimą, jei reikia
            }
        }
    }
}
